name: DownloaderAction
on:
  repository_dispatch:
    types:
      - download

jobs:
  run:
    runs-on: ubuntu-latest
    name: Run
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create directory
        shell: bash
        run: mkdir -p download
      - name: Masking Secrets
        shell: bash
        run: |
          echo -n '::add-mask::' >> secrets.txt && \
          jq -r .client_payload.link < "${GITHUB_EVENT_PATH}" >> secrets.txt && \
          echo -n '::add-mask::' >> secrets.txt && \
          jq -r .client_payload.channel < "${GITHUB_EVENT_PATH}" >> secrets.txt && \
          echo -n '::add-mask::' >> secrets.txt && \
          jq -r .client_payload.message < "${GITHUB_EVENT_PATH}" >> secrets.txt && \
          echo -n '::add-mask::' >> secrets.txt && \
          jq -r .client_payload.token < "${GITHUB_EVENT_PATH}" >> secrets.txt && \
          cat secrets.txt && \
          rm -rf secrets.txt
      - name: Setup Python3
        if: ${{ success() }}
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Setup Dependencies
        if: ${{ success() }}
        shell: bash
        run: |
          type ffmpeg > /dev/null 2>&1 || sudo apt-get update && sudo apt-get install -y ffmpeg
          type yt-dlp > /dev/null 2>&1 || python3 -m pip install -U yt-dlp
      - name: Confirmation of link survival
        id: link_status
        shell: bash
        run: |
          if [[ ${{ toJSON(github.event.client_payload.link) }} =~ ^http.*$ ]]; then
            status="$(curl -siL -m 18000 --retry 100 --retry-all-errors ${{ toJSON(github.event.client_payload.link) }} -o /dev/null -w '%{http_code}\n';:)"
            if [[ "${status}" != "200" && "${status}" != "302" && "${status}" != "307" ]]; then
              status="notfound" && \
              echo "status=${status}" >> "$GITHUB_OUTPUT" && \
              exit 2
            fi
          fi
      - name: Start Download
        if: ${{ success() }}
        shell: bash
        run: |
          retry=0
          flag=false
          cookie_path=$(pwd) && \
          echo "${{ secrets.TWITTER_COOKIES }}" >> cookie.txt && \
          cd download && \
          IFS=$'\n' && \
          until "${flag}" || (( "${retry}" == 10 )); do
            echo "Flag status; ${flag}"
            echo "Retry count: ${retry}"
            yt-dlp -q \
              --force-overwrites \
              --cookies ${cookie_path}/cookie.txt \
              --downloader "$(type ffmpeg | awk '{print $3}')" \
              -o "%(id)s_%(autonumber)s.%(ext)s" \
              ${{ toJSON(github.event.client_payload.link) }} && \
            flag=true
            for file_name in $(ls -tr); do
              if ffprobe -v error -f lavfi movie="$(pwd)/${file_name}" 2>&1 > /dev/null; then
                flag=false
              fi
            done
            if "${flag}"; then
              :
            else
              ((retry++)) || true
            fi
            sleep 1
          done
      - name: Check and Convert Files
        if: ${{ success() }}
        timeout-minutes: 10
        shell: bash
        run: |
          dir=$(pwd) && \
          cd download && \
          IFS=$'\n' && \
          for file_name in $(ls -tr); do
            if (( "$(wc -c < "${file_name}")" <= 26214400 )); then
              :
            else
              mkdir -p "${dir}/conv" && \
              ffmpeg -i "${file_name}" -c:v libvpx -crf 10 -b:v 1M -c:a libvorbis -fs 25MB "${dir}/conv/${file_name%.*}.webm"
            fi
          done
      - name: Upload files
        if: ${{ success() }}
        id: upload
        shell: bash
        run: |
          dir=$(pwd) && \
          cd download && \
          IFS=$'\n' && \
          if (( "$(ls|wc -l)" > 1 )); then
            options=()
            options+=( -F 'status=success' )
            options+=( -F 'commandType=dl' )
            options+=( -F 'actionType=multi' )
            options+=( -F 'channel=${{ toJSON(github.event.client_payload.channel) }}' )
            options+=( -F 'message=${{ toJSON(github.event.client_payload.message) }}' )
            options+=( -F 'token=${{ toJSON(github.event.client_payload.token) }}' )
            options+=( -F 'link=${{ toJSON(github.event.client_payload.link) }}' )
            index=0
            for file_name in $(ls -tr); do
              num=$((index++))
              if (( "$(wc -c < "${file_name}")" <= 26214400 )); then
                options+=( -F "name${num}=${file_name}" )
                options+=( -F "file${num}=@${file_name}" )
              else
                options+=( -F "name${num}=${file_name%.*}.webm" )
                options+=( -F "file${num}=@${dir}/conv/${file_name%.*}.webm" )
              fi
            done
            curl -s -X POST -H "Content-type: multipart/form-data" "${options[@]}" ${{ secrets.ENDPOINT_URL }}
          else
            file_name="$(ls)" && \
            if (( "$(wc -c < ${file_name})" <= 26214400 )); then
              curl -s -X POST \
                -H "Content-type: multipart/form-data" \
                -F "status=success" \
                -F "commandType=dl" \
                -F "actionType=single" \
                -F 'channel=${{ toJSON(github.event.client_payload.channel) }}' \
                -F 'message=${{ toJSON(github.event.client_payload.message) }}' \
                -F 'token=${{ toJSON(github.event.client_payload.token) }}' \
                -F 'link=${{ toJSON(github.event.client_payload.link) }}' \
                -F "name=${file_name}" \
                -F "file=@${file_name}" \
                ${{ secrets.ENDPOINT_URL }}
            else
              curl -s -X POST \
                -H "Content-type: multipart/form-data" \
                -F "status=success" \
                -F "commandType=dl" \
                -F "actionType=single" \
                -F 'channel=${{ toJSON(github.event.client_payload.channel) }}' \
                -F 'message=${{ toJSON(github.event.client_payload.message) }}' \
                -F 'token=${{ toJSON(github.event.client_payload.token) }}' \
                -F 'link=${{ toJSON(github.event.client_payload.link) }}' \
                -F "name=${file_name%.*}.webm" \
                -F "file=@${dir}/conv/${file_name%.*}.webm" \
                ${{ secrets.ENDPOINT_URL }}
            fi
          fi
      - name: Download file not found
        if: >-
          ${{
            failure() &&
            steps.link_status.outputs.status != ''
          }}
        shell: bash
        run: |
          curl -s -X POST \
            ${{ secrets.ENDPOINT_URL }} \
            -H "Accept: application/json" \
            -H "Content-type: application/json" \
            -d @- <<EOF
          {
            "status": "failure",
            "channel": ${{ toJSON(github.event.client_payload.channel) }},
            "message": ${{ toJSON(github.event.client_payload.message) }},
            "token": ${{ toJSON(github.event.client_payload.token) }},
            "link": ${{ toJSON(github.event.client_payload.link) }},
            "content": "Sorry! This link has expired."
          }
          EOF
      - name: Download timed out
        if: >-
          ${{
            failure() &&
            steps.link_status.outputs.status == ''
          }}
        shell: bash
        run: |
          curl -s -X POST \
            ${{ secrets.ENDPOINT_URL }} \
            -H "Accept: application/json" \
            -H "Content-type: application/json" \
            -d @- <<EOF
          {
            "status": "failure",
            "channel": ${{ toJSON(github.event.client_payload.channel) }},
            "message": ${{ toJSON(github.event.client_payload.message) }},
            "token": ${{ toJSON(github.event.client_payload.token) }},
            "link": ${{ toJSON(github.event.client_payload.link) }},
            "content": "Sorry! Processing time exceeded 5 hours and timed out."
          }
          EOF
